"use strict";var _require=require("jsonwebtoken"),JsonWebTokenError=_require.JsonWebTokenError,mongoose=require("mongoose"),blogMessage=require("../models/blogMessage"),verify=require("../routes/verifyToken"),jwt="jsonwebtoken",getPost=function(e,t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(blogMessage.find());case 3:r=e.sent,t.status(200).json(r),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(404).json({message:e.t0.message});case 10:case"end":return e.stop()}},null,null,[[0,7]])},readPost=function(t,r){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=t.params.id,console.log(s),mongoose.Types.ObjectId.isValid(s)){e.next=4;break}return e.abrupt("return",r.status(404).send("No Post with that id"));case 4:return e.next=6,regeneratorRuntime.awrap(blogMessage.findById(s));case 6:n=e.sent,r.json(n);case 8:case"end":return e.stop()}})},createPost=function(t,r){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=t.body,n=new blogMessage(s),e.prev=2,e.next=5,regeneratorRuntime.awrap(n.save());case 5:r.status(201).json(n),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(2),r.status(409).json({message:e.t0.message});case 11:case"end":return e.stop()}},null,null,[[2,8]])},deletePost=function(t,r){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=t.params.id,mongoose.Types.ObjectId.isValid(s)){e.next=3;break}return e.abrupt("return",r.status(404).send("No post with that id"));case 3:return e.next=5,regeneratorRuntime.awrap(blogMessage.findByIdAndRemove(s));case 5:r.json({message:"Post deleted successfully"});case 6:case"end":return e.stop()}})},likePost=function(t,r){var s,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=t.params.id,mongoose.Types.ObjectId.isValid(s)){e.next=3;break}return e.abrupt("return",r.status(404).send("No post with that id"));case 3:return e.next=5,regeneratorRuntime.awrap(blogMessage.findById(s));case 5:return n=e.sent,e.next=8,regeneratorRuntime.awrap(blogMessage.findByIdAndUpdate(s,{likeCount:n.likeCount+1},{new:!0}));case 8:a=e.sent,r.json(a);case 10:case"end":return e.stop()}})};module.exports={getPost:getPost,createPost:createPost,readPost:readPost,deletePost:deletePost,likePost:likePost};
//# sourceMappingURL=blogPost.min.js.map
